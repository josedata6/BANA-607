[
    {
        "label": "pandas",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pandas",
        "description": "pandas",
        "detail": "pandas",
        "documentation": {}
    },
    {
        "label": "stats",
        "importPath": "scipy",
        "description": "scipy",
        "isExtraImport": true,
        "detail": "scipy",
        "documentation": {}
    },
    {
        "label": "seaborn",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "seaborn",
        "description": "seaborn",
        "detail": "seaborn",
        "documentation": {}
    },
    {
        "label": "matplotlib.pyplot",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "matplotlib.pyplot",
        "description": "matplotlib.pyplot",
        "detail": "matplotlib.pyplot",
        "documentation": {}
    },
    {
        "label": "statsmodels.api",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "statsmodels.api",
        "description": "statsmodels.api",
        "detail": "statsmodels.api",
        "documentation": {}
    },
    {
        "label": "ttest_ind",
        "importPath": "scipy.stats",
        "description": "scipy.stats",
        "isExtraImport": true,
        "detail": "scipy.stats",
        "documentation": {}
    },
    {
        "label": "#df",
        "kind": 5,
        "importPath": "midterm2",
        "description": "midterm2",
        "peekOfCode": "#df = pd.read_csv('ME2_Dataset.csv')\n#print(df)\n#################################\n##### Detect Missing Values #####\n#################################\n# # adding missing values from the Customer_ID column with recurring number\n# # # Step 1: Load the CSV file into a DataFrame\n# df = pd.read_csv(\"ME2_Dataset.csv\")\n# # Step 2: Convert the 'customer_ID' column to numerical values (if not already numeric)\n# df['Customer_ID'] = pd.to_numeric(df['Customer_ID'], errors='coerce')",
        "detail": "midterm2",
        "documentation": {}
    },
    {
        "label": "df",
        "kind": 5,
        "importPath": "midterm2",
        "description": "midterm2",
        "peekOfCode": "df = pd.read_csv(\"ME2_Dataset-v5.csv\")\n### 1. Income and Spending Score\n### H₀: There is no correlation between income and spending score.\n### H₁: There is a significant correlation between income and spending score.\n# Prepare data\n# X = df['Income']  # Independent variable\n# y = df['Spending_Score']  # Dependent variable\n# # Add constant for the regression model\n# X = sm.add_constant(X)\n# # Perform regression",
        "detail": "midterm2",
        "documentation": {}
    },
    {
        "label": "high_freq",
        "kind": 5,
        "importPath": "midterm2",
        "description": "midterm2",
        "peekOfCode": "high_freq = df[df['Purchase_Frequency'] > df['Purchase_Frequency'].median()]['Customer_Rating']\nlow_freq = df[df['Purchase_Frequency'] <= df['Purchase_Frequency'].median()]['Customer_Rating']\n# Perform t-test\nt_stat, p_value = ttest_ind(high_freq, low_freq)\nprint(f\"T-test results: t-statistic={t_stat:.2f}, p-value={p_value:.4f}\")",
        "detail": "midterm2",
        "documentation": {}
    },
    {
        "label": "low_freq",
        "kind": 5,
        "importPath": "midterm2",
        "description": "midterm2",
        "peekOfCode": "low_freq = df[df['Purchase_Frequency'] <= df['Purchase_Frequency'].median()]['Customer_Rating']\n# Perform t-test\nt_stat, p_value = ttest_ind(high_freq, low_freq)\nprint(f\"T-test results: t-statistic={t_stat:.2f}, p-value={p_value:.4f}\")",
        "detail": "midterm2",
        "documentation": {}
    }
]