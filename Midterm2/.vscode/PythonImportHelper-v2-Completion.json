[
    {
        "label": "pandas",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pandas",
        "description": "pandas",
        "detail": "pandas",
        "documentation": {}
    },
    {
        "label": "stats",
        "importPath": "scipy",
        "description": "scipy",
        "isExtraImport": true,
        "detail": "scipy",
        "documentation": {}
    },
    {
        "label": "seaborn",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "seaborn",
        "description": "seaborn",
        "detail": "seaborn",
        "documentation": {}
    },
    {
        "label": "matplotlib.pyplot",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "matplotlib.pyplot",
        "description": "matplotlib.pyplot",
        "detail": "matplotlib.pyplot",
        "documentation": {}
    },
    {
        "label": "statsmodels.api",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "statsmodels.api",
        "description": "statsmodels.api",
        "detail": "statsmodels.api",
        "documentation": {}
    },
    {
        "label": "mean_squared_error",
        "importPath": "sklearn.metrics",
        "description": "sklearn.metrics",
        "isExtraImport": true,
        "detail": "sklearn.metrics",
        "documentation": {}
    },
    {
        "label": "mean_absolute_error",
        "importPath": "sklearn.metrics",
        "description": "sklearn.metrics",
        "isExtraImport": true,
        "detail": "sklearn.metrics",
        "documentation": {}
    },
    {
        "label": "r2_score",
        "importPath": "sklearn.metrics",
        "description": "sklearn.metrics",
        "isExtraImport": true,
        "detail": "sklearn.metrics",
        "documentation": {}
    },
    {
        "label": "#df",
        "kind": 5,
        "importPath": "midterm2",
        "description": "midterm2",
        "peekOfCode": "#df = pd.read_csv('ME2_Dataset.csv')\n#print(df)\n#################################\n##### Detect Missing Values #####\n#################################\n# # adding missing values from the Customer_ID column with recurring number\n# # # Step 1: Load the CSV file into a DataFrame\n# df = pd.read_csv(\"ME2_Dataset.csv\")\n# # Step 2: Convert the 'customer_ID' column to numerical values (if not already numeric)\n# df['Customer_ID'] = pd.to_numeric(df['Customer_ID'], errors='coerce')",
        "detail": "midterm2",
        "documentation": {}
    },
    {
        "label": "df",
        "kind": 5,
        "importPath": "midterm2",
        "description": "midterm2",
        "peekOfCode": "df = pd.read_csv(\"ME2_Dataset-v5.csv\")\n### 1. Income and Spending Score\n### H₀: There is no correlation between income and spending score.\n### H₁: There is a significant correlation between income and spending score.\n# Prepare data\n# X = df['Income']  # Independent variable\n# y = df['Spending_Score']  # Dependent variable\n# # Add constant for the regression model\n# X = sm.add_constant(X)\n# # Perform regression",
        "detail": "midterm2",
        "documentation": {}
    },
    {
        "label": "mse",
        "kind": 5,
        "importPath": "midterm2",
        "description": "midterm2",
        "peekOfCode": "mse = mean_squared_error(y_test, y_pred)\nmae = mean_absolute_error(y_test, y_pred)\nr2 = r2_score(y_test, y_pred)\n# Print metrics\nprint(f\"Mean Absolute Error (MAE): {mae:.2f}\")\nprint(f\"Mean Squared Error (MSE): {mse:.2f}\")\nprint(f\"R-squared: {r2:.2f}\")\n# Scatter plot\nplt.figure(figsize=(8, 6))\nsns.scatterplot(x=y_test, y=y_pred)",
        "detail": "midterm2",
        "documentation": {}
    },
    {
        "label": "mae",
        "kind": 5,
        "importPath": "midterm2",
        "description": "midterm2",
        "peekOfCode": "mae = mean_absolute_error(y_test, y_pred)\nr2 = r2_score(y_test, y_pred)\n# Print metrics\nprint(f\"Mean Absolute Error (MAE): {mae:.2f}\")\nprint(f\"Mean Squared Error (MSE): {mse:.2f}\")\nprint(f\"R-squared: {r2:.2f}\")\n# Scatter plot\nplt.figure(figsize=(8, 6))\nsns.scatterplot(x=y_test, y=y_pred)\nplt.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], color='red', linewidth=2)  # Perfect prediction line",
        "detail": "midterm2",
        "documentation": {}
    },
    {
        "label": "r2",
        "kind": 5,
        "importPath": "midterm2",
        "description": "midterm2",
        "peekOfCode": "r2 = r2_score(y_test, y_pred)\n# Print metrics\nprint(f\"Mean Absolute Error (MAE): {mae:.2f}\")\nprint(f\"Mean Squared Error (MSE): {mse:.2f}\")\nprint(f\"R-squared: {r2:.2f}\")\n# Scatter plot\nplt.figure(figsize=(8, 6))\nsns.scatterplot(x=y_test, y=y_pred)\nplt.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], color='red', linewidth=2)  # Perfect prediction line\nplt.title(\"Actual vs Predicted Values\")",
        "detail": "midterm2",
        "documentation": {}
    },
    {
        "label": "residuals",
        "kind": 5,
        "importPath": "midterm2",
        "description": "midterm2",
        "peekOfCode": "residuals = y_test - y_pred\n# Residuals plot\nplt.figure(figsize=(8, 6))\nsns.scatterplot(x=y_pred, y=residuals)\nplt.axhline(0, color='red', linestyle='--', linewidth=2)\nplt.title(\"Residuals vs Predicted Values\")\nplt.xlabel(\"Predicted Satisfaction Score\")\nplt.ylabel(\"Residuals\")\nplt.grid(True)\nplt.show()",
        "detail": "midterm2",
        "documentation": {}
    },
    {
        "label": "coef",
        "kind": 5,
        "importPath": "midterm2",
        "description": "midterm2",
        "peekOfCode": "coef = pd.DataFrame({\n    'Feature': X_train.columns,\n    'Coefficient': model.coef_\n})\n# Bar plot of coefficients\nplt.figure(figsize=(10, 6))\nsns.barplot(data=coef, x='Coefficient', y='Feature', orient='h')\nplt.title(\"Feature Importance (Linear Regression Coefficients)\")\nplt.xlabel(\"Coefficient Value\")\nplt.ylabel(\"Feature\")",
        "detail": "midterm2",
        "documentation": {}
    }
]